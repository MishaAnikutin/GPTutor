version: '3.9'

services:
  frontend-gptutor-stage:
    env_file:
      - .env-infra
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP: 'GPTutor'
    container_name: frontend-gptutor-stage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-stage.rule=Host(`stage.${HOST}`)"
      - "traefik.http.routers.frontend-stage.entrypoints=websecure"
      - "traefik.http.routers.frontend-stage.tls.certresolver=myresolver"
    networks:
      - trfk

  frontend-stable-art-stage:
    env_file:
      - .env-infra
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP: 'Stable Art'
    container_name: frontend-stable-art-stage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-stage.rule=Host(`stage.${HOST}`)"
      - "traefik.http.routers.frontend-stage.entrypoints=websecure"
      - "traefik.http.routers.frontend-stage.tls.certresolver=myresolver"
    networks:
      - trfk

  backend-stage:
    env_file:
      - .env-infra
      - .env-stage
    build: ./GPTutor-Backend
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:postgresql://postgresql:5432/postgres",
        "spring.datasource.username": "${POSTGRES_USER}",
        "spring.datasource.password": "${POSTGRES_PASSWORD}",
        "cors.allowed.origins": "${CORS_ORIGIN}",
        "auth.skip": ${SKIP_AUTH},
        "api.keys.120dollars":  "${API_KEYS_120}",
        "api.keys.5dollars": "${API_KEYS_5}"
      }'
    container_name: backend-stage
    depends_on:
      - postgresql-stage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-stage.rule=Host(`stage.${HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-stage.entrypoints=websecure"
      - "traefik.http.routers.backend-stage.tls.certresolver=myresolver"
    networks:
      - trfk

  postgresql-stage:
    image: 'postgres:13.1-alpine'
    container_name: postgresql-stage
    env_file:
      - .env-stage
    volumes:
      - db-data-stage:/var/lib/postgresql/data
    networks:
      - trfk

volumes:
  db-data-stage:

networks:
  trfk:
    driver: overlay
    external: true
