version: '3.9'

services:
  frontend-gptutor-prod:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP: 'GPTutor'
    container_name: frontend-gptutor-prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-gptutor-prod.rule=Host(`prod.${HOST}`) && PathPrefix(`/gptutor`)"
      - "traefik.http.routers.frontend-gptutor-prod.entrypoints=websecure"
      - "traefik.http.routers.frontend-gptutor-prod.tls.certresolver=myresolver"
    networks:
      - trfk

  frontend-stable-art-prod:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP: 'Stable Art'
    container_name: frontend-stable-art-prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-stable-art-prod.rule=Host(`prod.${HOST}`) && PathPrefix(`/stable-art`)"
      - "traefik.http.routers.frontend-stable-art-prod.entrypoints=websecure"
      - "traefik.http.routers.frontend-stable-art-prod.tls.certresolver=myresolver"
    networks:
      - trfk

  backend-prod:
    env_file:
      - .env
      - .env-prod
    build: ./GPTutor-Backend
    container_name: backend-prod
    ports:
      - "8080:8080"
    depends_on:
      - postgresql-prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-prod.rule=Host(`prod.${HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-prod.entrypoints=websecure"
      - "traefik.http.routers.backend-prod.tls.certresolver=myresolver"
    networks:
      - trfk
  models-prod:
    env_file:
      - .env-prod
    container_name: models-prod
    build:
      context: GPTutor-Models
      dockerfile: Dockerfile
    networks:
      - trfk

  postgresql-prod:
    image: 'postgres:13.1-alpine'
    container_name: postgresql-prod
    env_file:
      - .env-prod
    volumes:
      - db-data-prod:/var/lib/postgresql/data
    networks:
      - trfk

volumes:
  db-data-prod:

networks:
  trfk:
    driver: overlay
    external: true
